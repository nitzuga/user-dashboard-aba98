rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /persons/{rut} {
    	allow read: if isAdmin();
      allow create, update: if isAdmin() 
      	&& 'rut' in request.resource.data
        && isRut(request.resource.data.rut)
        && 'name' in request.resource.data
        && isName(request.resource.data.name)
        && 'lastname' in request.resource.data
        && isLastName(request.resource.data.lastname)
        && hasAge()
        && hasAddress();
      allow delete: if isAdmin();
    }
  }
  
  function isAddress() {
  	return 'address' in request.resource.data
    	&& request.resource.data.address is string
    	&& request.resource.data.address.size() > 0
      && request.resource.data.address.size() < 400;
  }
  
  function isAge() {
  	return 'age' in request.resource.data
    	&& request.resource.data.age is number
    	&& request.resource.data.age < 120
      && (request.resource.data.age > 18 || request.resource.data.age == 0);
  }
  
  function isLastName(lastname) {
  	return lastname is string
    	&& lastname.size() > 0
      && lastname.size() < 60;
  }
  
  function isName(name) {
  	return name is string
    	&& name.size() > 0
      && name.size() < 50;
  }
  
  function isRut(rut) {
  	return rut is string
    	&& rut.size() > 0
      && rut.size() < 12;
  }
  
  function hasAge() {
  	return !('age' in request.resource.data) 
    	|| isAge();
  }
  
  function hasAddress() {
  	return !('address' in request.resource.data) 
    	|| isAddress();
  }
  
  /**
  *	Simple admin verification. Static to just one ID. 
  *	Only for testing environment.
  **/
  function isAdmin() {
  	return request.auth.uid != null
    	&& request.auth.uid == '16t5jmhLGNYztXCq6JetOxALWO13';
  }
}